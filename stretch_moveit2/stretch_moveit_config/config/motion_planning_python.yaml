planning_scene_monitor_options:
  name: "planning_scene_monitor"
  robot_description: "robot_description"
  joint_state_topic: "/stretch/joint_states"
  attached_collision_object_topic: "/moveit_cpp/planning_scene_monitor"
  publish_planning_scene_topic: "/moveit_cpp/publish_planning_scene"
  monitored_planning_scene_topic: "/moveit_cpp/monitored_planning_scene"
  wait_for_initial_state_timeout: 10.0

planning_pipelines:
  pipeline_names: ["ompl", "pilz_industrial_motion_planner", "chomp", "ompl_rrt_star"]

default_planning_pipeline: ompl

ompl:
  planner_configs:
    AnytimePathShortening:
      type: geometric::AnytimePathShortening
      shortcut: true  # Attempt to shortcut all new solution paths
      hybridize: true  # Compute hybrid solution trajectories
      max_hybrid_paths: 24  # Number of hybrid paths generated per iteration
      num_planners: 4  # The number of default planners to use for planning
      planners: ""  # A comma-separated list of planner types (e.g., "PRM,EST,RRTConnect"Optionally, planner parameters can be passed to change the default:"PRM[max_nearest_neighbors=5],EST[goal_bias=.5],RRT[range=10. goal_bias=.1]"
    SBL:
      type: geometric::SBL
      range: 0.0  # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
    EST:
      type: geometric::EST
      range: 0.0  # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0 setup()
      goal_bias: 0.05  # When close to goal select goal, with this probability. default: 0.05
    LBKPIECE:
      type: geometric::LBKPIECE
      range: 0.0  # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
      border_fraction: 0.9  # Fraction of time focused on boarder default: 0.9
      min_valid_path_fraction: 0.5  # Accept partially valid moves above fraction. default: 0.5
    BKPIECE:
      type: geometric::BKPIECE
      range: 0.0  # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
      border_fraction: 0.9  # Fraction of time focused on boarder default: 0.9
      failed_expansion_score_factor: 0.5  # When extending motion fails, scale score by factor. default: 0.5
      min_valid_path_fraction: 0.5  # Accept partially valid moves above fraction. default: 0.5
    KPIECE:
      type: geometric::KPIECE
      range: 0.0  # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
      goal_bias: 0.05  # When close to goal select goal, with this probability. default: 0.05
      border_fraction: 0.9  # Fraction of time focused on boarder default: 0.9 (0.0,1.]
      failed_expansion_score_factor: 0.5  # When extending motion fails, scale score by factor. default: 0.5
      min_valid_path_fraction: 0.5  # Accept partially valid moves above fraction. default: 0.5
    RRT:
      type: geometric::RRT
      range: 0.0  # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
      goal_bias: 0.05  # When close to goal select goal, with this probability? default: 0.05
    RRTConnect:
      type: geometric::RRTConnect
      range: 0.0  # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
    RRTstar:
      type: geometric::RRTstar
      range: 0.0  # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
      goal_bias: 0.05  # When close to goal select goal, with this probability? default: 0.05
      delay_collision_checking: 1  # Stop collision checking as soon as C-free parent found. default 1
    TRRT:
      type: geometric::TRRT
      range: 0.0  # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
      goal_bias: 0.05  # When close to goal select goal, with this probability? default: 0.05
      max_states_failed: 10  # when to start increasing temp. default: 10
      temp_change_factor: 2.0  # how much to increase or decrease temp. default: 2.0
      min_temperature: 10e-10  # lower limit of temp change. default: 10e-10
      init_temperature: 10e-6  # initial temperature. default: 10e-6
      frountier_threshold: 0.0  # dist new state to nearest neighbor to disqualify as frontier. default: 0.0 set in setup()
      frountierNodeRatio: 0.1  # 1/10, or 1 nonfrontier for every 10 frontier. default: 0.1
      k_constant: 0.0  # value used to normalize expresssion. default: 0.0 set in setup()
    PRM:
      type: geometric::PRM
      max_nearest_neighbors: 10  # use k nearest neighbors. default: 10
    PRMstar:
      type: geometric::PRMstar
    FMT:
      type: geometric::FMT
      num_samples: 1000  # number of states that the planner should sample. default: 1000
      radius_multiplier: 1.1  # multiplier used for the nearest neighbors search radius. default: 1.1
      nearest_k: 1  # use Knearest strategy. default: 1
      cache_cc: 1  # use collision checking cache. default: 1
      heuristics: 0  # activate cost to go heuristics. default: 0
      extended_fmt: 1  # activate the extended FMT*: adding new samples if planner does not finish successfully. default: 1
    BFMT:
      type: geometric::BFMT
      num_samples: 1000  # number of states that the planner should sample. default: 1000
      radius_multiplier: 1.0  # multiplier used for the nearest neighbors search radius. default: 1.0
      nearest_k: 1  # use the Knearest strategy. default: 1
      balanced: 0  # exploration strategy: balanced true expands one tree every iteration. False will select the tree with lowest maximum cost to go. default: 1
      optimality: 1  # termination strategy: optimality true finishes when the best possible path is found. Otherwise, the algorithm will finish when the first feasible path is found. default: 1
      heuristics: 1  # activates cost to go heuristics. default: 1
      cache_cc: 1  # use the collision checking cache. default: 1
      extended_fmt: 1  # Activates the extended FMT*: adding new samples if planner does not finish successfully. default: 1
    PDST:
      type: geometric::PDST
    STRIDE:
      type: geometric::STRIDE
      range: 0.0  # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
      goal_bias: 0.05  # When close to goal select goal, with this probability. default: 0.05
      use_projected_distance: 0  # whether nearest neighbors are computed based on distances in a projection of the state rather distances in the state space itself. default: 0
      degree: 16  # desired degree of a node in the Geometric Near-neightbor Access Tree (GNAT). default: 16
      max_degree: 18  # max degree of a node in the GNAT. default: 12
      min_degree: 12  # min degree of a node in the GNAT. default: 12
      max_pts_per_leaf: 6  # max points per leaf in the GNAT. default: 6
      estimated_dimension: 0.0  # estimated dimension of the free space. default: 0.0
      min_valid_path_fraction: 0.2  # Accept partially valid moves above fraction. default: 0.2
    BiTRRT:
      type: geometric::BiTRRT
      range: 0.0  # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
      temp_change_factor: 0.1  # how much to increase or decrease temp. default: 0.1
      init_temperature: 100  # initial temperature. default: 100
      frountier_threshold: 0.0  # dist new state to nearest neighbor to disqualify as frontier. default: 0.0 set in setup()
      frountier_node_ratio: 0.1  # 1/10, or 1 nonfrontier for every 10 frontier. default: 0.1
      cost_threshold: 1e300  # the cost threshold. Any motion cost that is not better will not be expanded. default: inf
    LBTRRT:
      type: geometric::LBTRRT
      range: 0.0  # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
      goal_bias: 0.05  # When close to goal select goal, with this probability. default: 0.05
      epsilon: 0.4  # optimality approximation factor. default: 0.4
    BiEST:
      type: geometric::BiEST
      range: 0.0  # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
    ProjEST:
      type: geometric::ProjEST
      range: 0.0  # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
      goal_bias: 0.05  # When close to goal select goal, with this probability. default: 0.05
    LazyPRM:
      type: geometric::LazyPRM
      range: 0.0  # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
    LazyPRMstar:
      type: geometric::LazyPRMstar
    SPARS:
      type: geometric::SPARS
      stretch_factor: 3.0  # roadmap spanner stretch factor. multiplicative upper bound on path quality. It does not make sense to make this parameter more than 3. default: 3.0
      sparse_delta_fraction: 0.25  # delta fraction for connection distance. This value represents the visibility range of sparse samples. default: 0.25
      dense_delta_fraction: 0.001  # delta fraction for interface detection. default: 0.001
      max_failures: 1000  # maximum consecutive failure limit. default: 1000
    SPARStwo:
      type: geometric::SPARStwo
      stretch_factor: 3.0  # roadmap spanner stretch factor. multiplicative upper bound on path quality. It does not make sense to make this parameter more than 3. default: 3.0
      sparse_delta_fraction: 0.25  # delta fraction for connection distance. This value represents the visibility range of sparse samples. default: 0.25
      dense_delta_fraction: 0.001  # delta fraction for interface detection. default: 0.001
      max_failures: 5000  # maximum consecutive failure limit. default: 5000
  stretch_arm:
    default_planner_config: RRTConnect
    planner_configs:
      - AnytimePathShortening
      - SBL
      - EST
      - LBKPIECE
      - BKPIECE
      - KPIECE
      - RRT
      - RRTConnect
      - RRTstar
      - TRRT
      - PRM
      - PRMstar
      - FMT
      - BFMT
      - PDST
      - STRIDE
      - BiTRRT
      - LBTRRT
      - BiEST
      - ProjEST
      - LazyPRM
      - LazyPRMstar
      - SPARS
      - SPARStwo
  stretch_gripper:
    default_planner_config: RRTConnect
    planner_configs:
      - AnytimePathShortening
      - SBL
      - EST
      - LBKPIECE
      - BKPIECE
      - KPIECE
      - RRT
      - RRTConnect
      - RRTstar
      - TRRT
      - PRM
      - PRMstar
      - FMT
      - BFMT
      - PDST
      - STRIDE
      - BiTRRT
      - LBTRRT
      - BiEST
      - ProjEST
      - LazyPRM
      - LazyPRMstar
      - SPARS
      - SPARStwo
  stretch_head:
    default_planner_config: RRTConnect
    planner_configs:
      - AnytimePathShortening
      - SBL
      - EST
      - LBKPIECE
      - BKPIECE
      - KPIECE
      - RRT
      - RRTConnect
      - RRTstar
      - TRRT
      - PRM
      - PRMstar
      - FMT
      - BFMT
      - PDST
      - STRIDE
      - BiTRRT
      - LBTRRT
      - BiEST
      - ProjEST
      - LazyPRM
      - LazyPRMstar
      - SPARS
      - SPARStwo
  mobile_base_arm:
    default_planner_config: RRTConnect
    planner_configs:
      - AnytimePathShortening
      - SBL
      - EST
      - LBKPIECE
      - BKPIECE
      - KPIECE
      - RRT
      - RRTConnect
      - RRTstar
      - TRRT
      - PRM
      - PRMstar
      - FMT
      - BFMT
      - PDST
      - STRIDE
      - BiTRRT
      - LBTRRT
      - BiEST
      - ProjEST
      - LazyPRM
      - LazyPRMstar
      - SPARS
      - SPARStwo
  planning_plugin: ompl_interface/OMPLPlanner
  request_adapters: "default_planner_request_adapters/AddTimeOptimalParameterization
          default_planner_request_adapters/FixWorkspaceBounds
          default_planner_request_adapters/FixStartStateBounds
          default_planner_request_adapters/FixStartStateCollision
          default_planner_request_adapters/FixStartStatePathConstraints"
  start_state_max_bounds_error: 0.1


plan_request_params:
  planning_attempts: 1
  planning_pipeline: ompl
  max_velocity_scaling_factor: 1.0
  max_acceleration_scaling_factor: 1.0

ompl_rrtc:  # Namespace for individual plan request
  plan_request_params:  # PlanRequestParameters similar to the ones that are used by the single pipeline planning of moveit_cpp
    planning_attempts: 1  # Number of attempts the planning pipeline tries to solve a given motion planning problem
    planning_pipeline: ompl  # Name of the pipeline that is being used
    planner_id: "RRTConnectkConfigDefault"  # Name of the specific planner to be used by the pipeline
    max_velocity_scaling_factor: 1.0  # Velocity scaling parameter for the trajectory generation algorithm that is called (if configured) after the path planning
    max_acceleration_scaling_factor: 1.0  # Acceleration scaling parameter for the trajectory generation algorithm that is called (if configured) after the path planning
    planning_time: 3.0  # Time budget for the motion plan request. If the planning problem cannot be solved within this time, an empty solution with error code is returned

pilz_lin:
  plan_request_params:
    planning_attempts: 1
    planning_pipeline: pilz_industrial_motion_planner
    planner_id: "PTP"
    max_velocity_scaling_factor: 1.0
    max_acceleration_scaling_factor: 1.0
    planning_time: 0.8

chomp:
  plan_request_params:
    planning_attempts: 1
    planning_pipeline: chomp
    max_velocity_scaling_factor: 1.0
    max_acceleration_scaling_factor: 1.0
    planning_time: 1.5

# Second OMPL pipeline
ompl_rrt_star:
  plan_request_params:
    planning_attempts: 1
    planning_pipeline: ompl_rrt_star # Different OMPL pipeline name!
    planner_id: "RRTstarkConfigDefault"
    max_velocity_scaling_factor: 1.0
    max_acceleration_scaling_factor: 1.0
    planning_time: 1.5

moveit_controller_manager: stretch_simple_controller_manager/MoveItSimpleControllerManager

stretch_simple_controller_manager:
  controller_names:
    - stretch_controller

  stretch_controller:
      action_ns: follow_joint_trajectory
      default: True
      type: FollowJointTrajectory
      joints:
        - joint_lift
        - joint_arm_l3
        - joint_arm_l2
        - joint_arm_l1
        - joint_arm_l0
        - joint_wrist_yaw
        - joint_wrist_pitch
        - joint_wrist_roll
        - joint_head_pan
        - joint_head_tilt
        - joint_gripper_finger_left
        - joint_gripper_finger_right
        - position

moveit_manage_controller: True # Optional?

trajectory_execution: # Optional?
  # allowed_execution_duration_scaling: 1.2
  allowed_execution_duration_scaling: 5.0
  # allowed_goal_duration_margin: 0.5
  allowed_goal_duration_margin: 1.0
  allowed_start_tolerance: 0.01

publish_planning_scene: True
publish_geometry_updates: True
publish_state_updates: True
publish_transforms_updates: True
publish_robot_description: False
publish_robot_description_semantic: False

robot_description_kinematics:
  stretch_arm:
    kinematics_solver: kdl_kinematics_plugin/KDLKinematicsPlugin
    kinematics_solver_search_resolution: 0.005
    kinematics_solver_timeout: 0.005
  mobile_base_arm:
    kinematics_solver: stretch_kinematics_plugin/StretchKinematicsPlugin
    kinematics_solver_search_resolution: 0.005
    kinematics_solver_timeout: 0.1
  stretch_head:
    kinematics_solver: kdl_kinematics_plugin/KDLKinematicsPlugin
    kinematics_solver_search_resolution: 0.005
    kinematics_solver_timeout: 0.1

robot_description_planning:
  joint_limits:
    joint_arm_l0:
      has_velocity_limits: true
      max_velocity: 0.02
      has_acceleration_limits: true
      max_acceleration: 0.02
    joint_arm_l1:
      has_velocity_limits: true
      max_velocity: 0.02
      has_acceleration_limits: true
      max_acceleration: 0.02
    joint_arm_l2:
      has_velocity_limits: true
      max_velocity: 0.02
      has_acceleration_limits: true
      max_acceleration: 0.02
    joint_arm_l3:
      has_velocity_limits: true
      max_velocity: 0.02
      has_acceleration_limits: true
      max_acceleration: 0.02
    joint_gripper_finger_left:
      has_velocity_limits: true
      max_velocity: 0.07
      has_acceleration_limits: true
      max_acceleration: 0.07
    joint_gripper_finger_right:
      has_velocity_limits: true
      max_velocity: 0.07
      has_acceleration_limits: true
      max_acceleration: 0.07
    joint_head_pan:
      has_velocity_limits: true
      max_velocity: 0.5
      has_acceleration_limits: true
      max_acceleration: 1.0
    joint_head_tilt:
      has_velocity_limits: true
      max_velocity: 0.5
      has_acceleration_limits: true
      max_acceleration: 1.0
    joint_lift:
      has_velocity_limits: true
      max_velocity: 0.06
      has_acceleration_limits: true
      max_acceleration: 0.04
    joint_wrist_yaw:
      has_velocity_limits: true
      max_velocity: 0.5
      has_acceleration_limits: true
      max_acceleration: 1.0
    joint_wrist_pitch:
      has_velocity_limits: true
      max_velocity: 0.5
      has_acceleration_limits: true
      max_acceleration: 1.0
    joint_wrist_roll:
      has_velocity_limits: true
      max_velocity: 0.5
      has_acceleration_limits: true
      max_acceleration: 1.0
    position/x:
      has_velocity_limits: true
      max_velocity: 0.04
      has_acceleration_limits: true
      max_acceleration: 0.02
    position/y:
      has_velocity_limits: true
      max_velocity: 0.04
      has_acceleration_limits: true
      max_acceleration: 0.02
    position/theta:
      has_velocity_limits: true
      max_velocity: 0.1
      has_acceleration_limits: true
      max_acceleration: 0.1

# planning_plugin: ompl_interface/OMPLPlanner
# request_adapters: "default_planner_request_adapters/AddTimeOptimalParameterization
#         default_planner_request_adapters/FixWorkspaceBounds
#         default_planner_request_adapters/FixStartStateBounds
#         default_planner_request_adapters/FixStartStateCollision
#         default_planner_request_adapters/FixStartStatePathConstraints"